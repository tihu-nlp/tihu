language: cpp
compiler: gcc
sudo: require
dist: trusty

before_install:
  - sudo add-apt-repository ppa:beineri/opt-qt-5.10.1-trusty -y
  - sudo add-apt-repository ppa:ubuntu-toolchain-r/test -y
  - sudo apt-get update -q
  # we need upgrade gcc for C++14:
  # https://docs.travis-ci.com/user/installing-dependencies/#installing-packages-from-a-custom-apt-repository
  # and change symbolic links
  # https://gist.github.com/jlblancoc/99521194aba975286c80f93e47966dc5
  - sudo apt-get install g++-7 -y
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-7 60 --slave /usr/bin/g++ g++ /usr/bin/g++-7
  - sudo update-alternatives --config gcc
  - gcc --version
  - g++ --versio

install:
  - sudo apt-get install openssl -y
  - sudo apt-get install gcc-7-multilib g++-7-multilib -y
  - sudo apt-get install qt510base qt510multimedia -y
  - source /opt/qt510/bin/qt510-env.sh
  - sudo pip install six --upgrade
  - sudo pip install pip --upgrade
  - sudo pip install hazm

# Build steps
script:
  ## MBROLA
  - git clone https://github.com/numediart/MBROLA
  - cd MBROLA
  - make
  - cp Bin/mbrola ../build/
  - cd ..

  ## espeak data
  # NOTE: libespeak.so in build folder is compiled manualy (without portaudio).
  - curl -sLO http://sourceforge.net/projects/espeak/files/espeak/espeak-1.48/espeak-1.48.04-source.zip
  - unzip -qq espeak-1.48.04-source.zip
  - cp -r espeak-1.48.04-source/espeak-data ./build/data/

  ## g2p-seq2seq-tihudict
  - curl -sLO https://github.com/tihu-nlp/tihudict/releases/download/v1.0/g2p-seq2seq-tihudict-model-1.0.tar.gz
  - tar zxf g2p-seq2seq-tihudict-model-1.0.tar.gz
  - mkdir ./build/data/g2p-seq2seq-tihudict
  - cp -r g2p-seq2seq-tihudict/* ./build/data/g2p-seq2seq-tihudict

  ## g2p-seq2seq-model-6.2-cmudict
  - curl -sLO https://sourceforge.net/projects/cmusphinx/files/G2P%20Models/g2p-seq2seq-model-6.2-cmudict-nostress.tar.gz
  - tar zxf g2p-seq2seq-model-6.2-cmudict-nostress.tar.gz
  - mkdir ./build/data/g2p-seq2seq-cmudict
  - cp -r g2p-seq2seq-model-6.2-cmudict-nostress/* ./build/data/g2p-seq2seq-cmudict

  ## download and install lame
  #- curl -sLO https://downloads.sourceforge.net/project/lame/lame/3.100/lame-3.100.tar.gz
  #- tar zxf lame-3.100.tar.gz
  #- cd lame-3.100
  #- ./configure
  #- make
  #- cd -

  ## build Tihu
  - make
  #- make test
  - make play
  # - make console

  ## tihu console => appimage
  - cd ./tools/tihu_console
  - qmake CONFIG+=release PREFIX=/usr
  - make -j$(nproc)
  ## https://github.com/probonopd/linuxdeployqt/issues/338
  #- sudo apt-get update
  #- sudo apt-get -y install libgtk2.0-dev
  #- git clone http://code.qt.io/qt/qtstyleplugins.git
  #- cd qtstyleplugins
  #- qmake # be sure to use the one from the Qt installation you are using for the application
  #- make -j$(nproc)
  #- sudo make install
  #- cd -

  ## https://github.com/probonopd/linuxdeployqt/issues/340
  #- make INSTALL_ROOT=appdir -j$(nproc) install ; find appdir/
  #- wget -c -nv "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage"
  #- chmod a+x linuxdeployqt-continuous-x86_64.AppImage
  #- unset QTDIR; unset QT_PLUGIN_PATH ; unset LD_LIBRARY_PATH
  #- ./linuxdeployqt-continuous-x86_64.AppImage appdir/usr/share/applications/*.desktop -appimage
  #- ls
  #- cp Tihu_console-*.AppImage ../../build
  - cp tihu_console ../../build

  ## tihu_server
  - cd -
  # installing gprc
  - git clone https://github.com/grpc/grpc
  - cd grpc
  - git checkout tags/v1.19.1
  - git submodule update --init
  - sed -i 's/-Werror/ /g' Makefile
  - make
  - sudo make install
  # protoc
  - cd third_party/protobuf
  - sudo apt-get install autoconf automake libtool curl make g++ unzip
  - git submodule update --init --recursive
  - ./autogen.sh
  - ./configure
  - make
  - sudo make install
  - sudo ldconfig
  # compile tihu_server
  - cd ../../..
  - cd tools/grpc
  - make tihu_server
  - cp tihu_server ../../build
  # to solve undefined_symbols (Unknown reason)
  - cp /usr/local/lib/libgrpc++.so.1 ../../build
  - cp /usr/local/lib/libgrpc++_reflection.so.1 ../../build
  - cp /usr/local/lib/libgrpc.so.7 ../../build
  - cp /usr/local/lib/libprotobuf.so.17 ../../build

  ## pack everything
  - cd ../../build && tar -czf tihu-linux-x64.tar.gz *

deploy:
  provider: releases
  api_key:
    secure: $GITHUB_OAUTH_TOKEN
  file:
    - tihu-linux-x64.tar.gz
  skip_cleanup: true
  on:
    tags: true
